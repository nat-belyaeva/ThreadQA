plugins {
    id 'java'
    id "io.freefair.lombok" version "8.0.1"
    id "io.qameta.allure" version "2.11.2"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.1'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    testImplementation 'org.aeonbits.owner:owner:1.0.4'
    testImplementation 'org.apache.commons:commons-io:1.3.2'
    testImplementation 'org.testng:testng:6.14.3'
    testImplementation 'io.rest-assured:rest-assured:4.4.0'
    testImplementation 'io.qameta.allure:allure-rest-assured:2.12.1'
    testImplementation 'com.github.javafaker:javafaker:1.0.2'
    testImplementation 'org.assertj:assertj-core:3.24.2'

    testImplementation 'org.seleniumhq.selenium:selenium-java:4.11.0'
    testImplementation 'io.github.bonigarcia:webdrivermanager:3.8.1'

    testImplementation 'com.codeborne:selenide:6.17.1'
    implementation 'com.codeborne:pdf-test:1.8.1'
    implementation 'org.apache.poi:poi:5.2.3'
    implementation 'org.apache.poi:poi-ooxml:5.2.3'
    implementation 'ru.yandex.qatools.ashot:ashot:1.5.4'

}


test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }

    systemProperties(System.getProperties())

    if (System.getProperty("threads") != null) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads").toInteger(),
        ]
    }


}

//запуск тестов происходит через эту команду для Junit5
// ./gradlew clean myTags -x test -DcustomTags="UI,API"
tasks.register("myTags", Test.class) {
    String fullTags = System.getProperty("customTags")
    if (fullTags != null) {
        String[] tags = fullTags.split(",")
        useJUnitPlatform {
            for (String tag : tags) {
                includeTags.add(tag)
            }
        }
        testLogging {
            events "passed", "skipped", "failed"
        }
    }
}

// Запуск тестов для TestNG через xml файл, который лежит в корне проекта
// ./gradlew clean testNGRun -x test -Dsuite="testng.xml"
tasks.register("testNGRun", Test.class) {
    testLogging {
        events "passed", "skipped", "failed"
    }
    useTestNG()
    String suiteName = System.getProperty("suite")
    if(suiteName!=null){
        useTestNG {
            suites suiteName
        }
    }
}